# Valorant 定点情報アプリ企画書

## はじめに

本ドキュメントは、Valorant の各マップにおける定点情報を可視化・管理するオフライン対応型 Windows アプリの企画内容をまとめたものです。対象ユーザーは初心者から中級者で、戦術学習と実践的な応用を目的としています。

---

## 1. 概要

本アプリは、Valorant におけるキャラクターごとのスキル使用位置（定点）を管理・表示する Windows 向けアプリケーションです。マップやキャラクター、スキルを選択することで、視覚的かつ直感的に定点情報を閲覧・追加できます。

---

## 2. 対象ユーザー

Valorant を始めたばかりの初心者から中級者を主な対象とし、操作性と学習効率の両立を意識した構成とします。スキルや定点の用途をカテゴリ別に整理し、戦術理解をサポートします。

---

## 3. 対応環境

* OS：Windows 11
* オフライン対応：初回起動時に Firestore からデータを取得し、以降はローカルメモリ上で高速にフィルタ・表示処理を実施

---

## 4. 技術構成

本アプリは、フレームワークを極力使用せず、シンプルで理解しやすい構成を重視しています。Electron を用いて上記の構成を Windows アプリとしてデスクトップ化します。

| 層      | 技術構成                                  |
| ------ | ------------------------------------- |
| フロント   | HTML + CSS + Vanilla JavaScript       |
| バックエンド | Node.js + `http` モジュール + Firebase SDK |
| データ管理  | Firebase Firestore                    |
| アプリ化   | Electron による Windows デスクトップアプリ化       |

### ディレクトリ構成（最小構成）

```
valorant-point-app/
├── main.js                # Electron アプリのエントリポイント
├── index.html             # メイン画面のHTML
├── style.css              # スタイルシート
├── script.js              # フロントエンドのロジック（JS）
├── firebase.js            # Firebase初期化と通信ロジック
├── package.json           # アプリ設定と依存関係
└── assets/                # 画像・アイコンなどのアセット
    ├── maps/              # マップ画像
    ├── agents/            # エージェントアイコン
    └── skills/            # スキルアイコン
```

---

## 5. アプリ画面と機能詳細

### 5.1 定点表示画面

#### ◼︎ 表示までのUI構造フロー（順不同のステップあり）

以下の3つの操作は、順不同で任意の順番で行うことができます：

* マップを選択する
* エージェントを選択する
* 攻め／守りを選択する

それらが揃った段階で、次の動的UIが表示されます：

1. 選択されたエージェントに対応するスキルアイコンが、攻め／守りボタンの下に表示される（※表示されるスキルは各Firestoreドキュメントの "agent" および "skill" フィールドに基づく）
2. スキルを1つ選択すると、該当スキルとサイドに対応するカテゴリボタン（最大6個+α）がスキルアイコンの下に動的表示される（※このカテゴリ情報は各Firestoreドキュメントの "applicableCategories" フィールドに基づく）
3. カテゴリをクリックすると、マップ中央に該当定点アイコンが表示され、クリックでモーダルを開く（※表示対象は Firestore ドキュメントの "position", "map", "skill", "category" 情報に基づく）
4. モーダルでは静止画像スライダーが表示され、投げ方がある場合は右下に表示される（※ "images" フィールドと "throwType" フィールドに基づく）

※特定スキル（サイファーのスパイカメラ、ヴァイパーのヴァイパーズピットなど）はカテゴリ選択をスキップして即表示される

* マップ選択：画面左側に縦 2 列のマップ選択ボタンを配置
* サイド切り替え：マップ選択下部に「攻め」「守り」の切り替えボタンを設置
* スキルアイコン表示：攻め／守りボタンの直下に、選択中のエージェントのスキルアイコン（1〜4個）が動的に表示され、ユーザーが1つ選択できる
* カテゴリ表示：スキルとサイドに対応するカテゴリ（例：「メイン＆ミッド取り」「エントリー」など）のボタンが、スキルアイコンの下に動的に表示される
* 定点表示：カテゴリを選択すると、該当する定点のスキルアイコンがマップ上に重ねて表示され、クリックすると詳細モーダルが表示される

  * モーダルには画像スライダー（2～5枚）が含まれ、「投げ方」が設定されている場合は画像右下に表示される
* キャラクター選択：画面下部に横並びでエージェントアイコンを一覧表示
* サイド切り替え：マップ選択下部に「攻め」「守り」の切り替えボタンを設置

  * 攻め：

    * メイン＆ミッド取り
    * エントリー
    * リテイク阻止
    * 解除阻止
    * ガジェット破壊
    * ウルトセット（※キルジョイ専用）
  * 守り：

    * 開幕
    * カウンター
    * リテイク
    * ガジェット破壊
    * ウルトセット（※キルジョイ専用）
  * スキルによってはカテゴリ表示が省略され、直接定点が表示される（例：サイファーのスパイカメラ、ヴァイパーのヴァイパーズピット）
* マップ画像と定点表示：画面中央にマップを表示し、定点位置にはスキルアイコンを重ねて表示
* 定点詳細表示：スキルアイコンをクリックすると、画像スライダー付きのモーダルウィンドウが開き、2～5枚の静止画像で詳細を確認可能

  * 投げ方（その場投げ／ジャンプ投げ／走りジャンプ投げ）が設定されている場合は、スライダー画像の右下にラベルとして表示される
* キャラクター選択：画面下部に横並びでエージェントアイコンを一覧表示

### 5.2 定点追加画面

* マップ → エージェント → スキル → 攻め/守り の各選択画面は、それぞれ1ページごとに構成され、「戻る」ボタンで前のページに戻ることが可能
* マップを選択すると、その画像を表示
* マップ画像をクリックし、%座標で定点位置を指定（方向キーで微調整可能）
* 画像（最大5枚）を1枚ずつアップロード
* エージェントごとのスキルをプルダウンから選択
* サイド（攻め／守り）を選択
* 該当するカテゴリは、スキル → サイド によるカテゴリマッピング定義に基づいて自動的に候補が制限される
* カテゴリを複数選択（チェックボックス形式）
* スキルごとに事前定義された条件により、「投げ方（その場投げ／ジャンプ投げ／走りジャンプ投げ）」を設定可能かどうかを制御する

---

## 6. データ構造（Firestore）

````json
{
  "agent": "Sova",
  "map": "Ascent",
  "position": { "x": 45.6, "y": 78.3 },
  "images": ["image1.jpg", "image2.jpg"],
  "skill": "Recon Bolt",
  "side": "攻め",
  "category": ["メイン＆ミッド取り", "ガジェット破壊"],
  "throwType": "ジャンプ投げ"
  "applicableCategories": ["メイン＆ミッド取り", "ガジェット破壊"]
}

### スキル → カテゴリ マッピング（例）

スキルごとに使用可能なカテゴリを定義し、攻め・守りに応じて動的に切り替え表示します。

```json
{
  "Recon Bolt": {
    "攻め": ["メイン＆ミッド取り", "エントリー", "ガジェット破壊"],
    "守り": ["開幕", "カウンター", "リテイク"]
  }
}
````

---

## 7. 今後の拡張予定

* お気に入り定点の保存機能（ローカルストレージによる管理）
* スキルアイコンの動的読み込み
* 初心者向けの UI ガイド／チュートリアルの実装

---

## 8. 除外対象

* テキスト検索、自由検索機能（すべて段階的ボタン選択によるフィルターで完結）
* 複数ユーザーによる投稿・共有機能（オンライン連携）

---

## 9. 補足情報

* Firestore のドキュメント ID は自動生成
* マップ画像は解像度を統一前提とし、定点位置は%座標で管理
* 動画ではなく、複数の静止画によって定点情報を構成

---

以上
